runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?is.null
runApp()
?validate
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
input$question4
runApp()
runApp()
runApp()
runApp()
?textInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?uiOutput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('rstudio-export')
install.packages('plotly')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp()
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
?tex
??Tex
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
??withMathJax
?latex
??latex
shiny::runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
?withMathJax
runApp('~/Desktop/rstudio-export')
??withMathJax
library(MathJax)
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
install.packages('nhpp.sim')
??nhpp.sim
?nhpp.sim
?nhpp
??nhpp
install.packages('nhpoisson')
yes
install.packages('NHPoisson')
shiny::runApp()
??bsButton(class)
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('shiny.widgets')
install.packages('shinyWidgets')
library(shinyWidgets)
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(shinydashboard)
library(png)
library(shinyBS)
library(V8)
library(shinyjs)
library(shinyWidgets)
runApp()
runApp()
runApp()
install.packages('methods')
install.packages("methods")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp('C:/Users/xvw41/AppData/Local/Temp/Temp1_Sample_App-master.zip/Sample_App-master')
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
funchir::stale_package_check("ui.R")
funchir::stale_package_check("server.R")
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/xvw41/Desktop')
runApp('C:/Users/xvw41/Desktop')
runApp()
runApp()
runApp()
shiny::runApp()
citation("shintdashboard")
citation("shinydashboard")
funchir::stale_package_check("ui.R")
citation("mosaic")
citation("truncnorm")
citation("scales")
runApp()
runApp()
runApp()
runApp('C:/Users/xvw41/Desktop')
runApp('C:/Users/xvw41/Desktop')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
funchir::stale_package_check("ui.R")
funchir::stale_package_check("server.R")
runApp()
shiny::runApp()
library(MASS)
library(Stat2Data)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat = “F”)
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat = “M”)
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=c(“F”))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=c(“M”))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=c(“F”,a))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=c(“M”,a))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=c("F",a))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=c("M",a))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=rep("F",a))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=rep("M",a))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=rep("F",a))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=rep("M",a))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=rep("F",a))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=rep("M",a))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages(c("backports", "broom", "data.table", "devtools", "dplyr", "DT", "foreign", "fs", "ggforce", "ggplot2", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "knitr", "later", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "quantreg", "raster", "Rcpp", "RcppArmadillo", "remotes", "rlang", "roxygen2", "rversions", "shiny", "sys", "tibble", "tidyr", "vctrs", "xfun"))
install.packages(c("backports", "broom", "data.table", "devtools", "dplyr", "DT", "foreign", "fs", "ggforce", "ggplot2", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "knitr", "later", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "quantreg", "raster", "Rcpp", "RcppArmadillo", "remotes", "rlang", "roxygen2", "rversions", "shiny", "sys", "tibble", "tidyr", "vctrs", "xfun"))
install.packages(c("backports", "broom", "data.table", "devtools", "dplyr", "DT", "foreign", "fs", "ggforce", "ggplot2", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "knitr", "later", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "quantreg", "raster", "Rcpp", "RcppArmadillo", "remotes", "rlang", "roxygen2", "rversions", "shiny", "sys", "tibble", "tidyr", "vctrs", "xfun"))
install.packages(c("backports", "dplyr", "fs", "tidyr"))
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
genderdf
data(genderdf)
data("genderdf")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
