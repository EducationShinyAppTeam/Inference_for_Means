runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
??withMathJax
?latex
??latex
shiny::runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
?withMathJax
runApp('~/Desktop/rstudio-export')
??withMathJax
library(MathJax)
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('~/Desktop/rstudio-export')
runApp('rstudio-export')
runApp('rstudio-export')
install.packages('nhpp.sim')
??nhpp.sim
?nhpp.sim
?nhpp
??nhpp
install.packages('nhpoisson')
yes
install.packages('NHPoisson')
shiny::runApp()
??bsButton(class)
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('shiny.widgets')
install.packages('shinyWidgets')
library(shinyWidgets)
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(shinydashboard)
library(png)
library(shinyBS)
library(V8)
library(shinyjs)
library(shinyWidgets)
runApp()
runApp()
runApp()
install.packages('methods')
install.packages("methods")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp('C:/Users/xvw41/AppData/Local/Temp/Temp1_Sample_App-master.zip/Sample_App-master')
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
funchir::stale_package_check("ui.R")
funchir::stale_package_check("server.R")
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/xvw41/Desktop')
runApp('C:/Users/xvw41/Desktop')
runApp()
runApp()
runApp()
shiny::runApp()
citation("shintdashboard")
citation("shinydashboard")
funchir::stale_package_check("ui.R")
citation("mosaic")
citation("truncnorm")
citation("scales")
runApp()
runApp()
runApp()
runApp('C:/Users/xvw41/Desktop')
runApp('C:/Users/xvw41/Desktop')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
funchir::stale_package_check("ui.R")
funchir::stale_package_check("server.R")
runApp()
shiny::runApp()
library(MASS)
library(Stat2Data)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat = “F”)
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat = “M”)
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=c(“F”))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=c(“M”))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=c(“F”,a))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=c(“M”,a))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=c("F",a))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=c("M",a))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=rep("F",a))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=rep("M",a))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=rep("F",a))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=rep("M",a))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
a <- sample(30:200, 1, replace = FALSE)
b <- runif(1, -1, 1)
result1 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,b,b,1), nrow = 2), empirical = FALSE)
x = result1[,1]
y = result1[,2]
data1 <- data.frame(x,y,cat=rep("F",a))
c <- runif(1, -1, 1)
result2 <- mvrnorm(a, mu = c(0,5), Sigma = matrix(c(1,c,c,1), nrow = 2), empirical = FALSE)
x = result2[,1]
y = result2[,2]
data2 <- data.frame(x, y, cat=rep("M",a))
sample1 <- rbind(data1, data2)
plot1 <- ggplot(sample1, aes(x = x, y = y, color = cat)) +geom_point() +geom_smooth(aes(x = x, y = y), method = "lm", se = FALSE)
plot1
mod1 <- lm(y ~ x*cat, sample1)
anova(mod1)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages(c("backports", "broom", "data.table", "devtools", "dplyr", "DT", "foreign", "fs", "ggforce", "ggplot2", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "knitr", "later", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "quantreg", "raster", "Rcpp", "RcppArmadillo", "remotes", "rlang", "roxygen2", "rversions", "shiny", "sys", "tibble", "tidyr", "vctrs", "xfun"))
install.packages(c("backports", "broom", "data.table", "devtools", "dplyr", "DT", "foreign", "fs", "ggforce", "ggplot2", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "knitr", "later", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "quantreg", "raster", "Rcpp", "RcppArmadillo", "remotes", "rlang", "roxygen2", "rversions", "shiny", "sys", "tibble", "tidyr", "vctrs", "xfun"))
install.packages(c("backports", "broom", "data.table", "devtools", "dplyr", "DT", "foreign", "fs", "ggforce", "ggplot2", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "knitr", "later", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "quantreg", "raster", "Rcpp", "RcppArmadillo", "remotes", "rlang", "roxygen2", "rversions", "shiny", "sys", "tibble", "tidyr", "vctrs", "xfun"))
install.packages(c("backports", "dplyr", "fs", "tidyr"))
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
genderdf
data(genderdf)
data("genderdf")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
shiny::runApp()
runApp()
read.dcf("./DESCRIPTION")
a <- read.dcf("./DESCRIPTION")
a["DisplayMode"]
a$DisplayMode
typeof(a)
class(a)
a[[1]]
a[[2]]
a[[3]]
a[1,]
a[,1]
a[,]
as.data.frame(a)
a <- as.data.frame(a)
a$Title
boastUtils::getLockerConfig()
library(styler)
install.packages("styler")
library(styler)
styler
styler::style_dir()
runApp()
rawSATMath <- read.table(
textConnection(
object = "score percentage
200-290 0.733
300-390 12.892
400-490 26.693
500-590 32.984
600-690 17.083
700-800 9.616"
),
header = TRUE,
stringsAsFactors = FALSE
)
rawSATMath
satMath <- data.frame(
score = sapply(strsplit(rawSATMath$score, "-"), function(x) mean(as.numeric(x))),
percentage = rawSATMath$percentage
)
satMath
runApp()
satMath <- data.frame(
score = c(245, 345, 445, 545, 645, 750),
percentage = c(0.733, 12.892, 26.693, 32.984, 17.083, 9.616)
)
satMath
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
d <- c(764.562117599603, 482.935163446026, 364.954525563964, 753.97272013164, 558.062948577637, 489.266537465641, 743.290653875697, 555.060135825459, 713.275809702017, 632.459611028824, 566.914477110678, 584.073002593199, 558.408836772658, 616.232153576928, 509.401426244234, 599.83970089063, 620.572248942859, 582.936999634123, 599.206769850026, 483.550482382413, 566.824372741997, 566.841305116652, 553.023007865233, 462.504539173557, 455.163172554291, 600.014785688427, 591.657375891451, 599.557512355809,
562.178136703468, 560.726419839428)
d %>% filter(idx == 482)
d
c(d) %>% filter(764)
as.data.frame(d) %>% filter(idx == 764)
as.data.frame(d) %>% filter(764)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::deployApp()
library(devtools)
devtools::install_github
devtools::install_github("rpc5102/rlocker")
remove.packages("boastUtils")
devtools::install_github("EducationShinyAppTeam/boastUtils", ref = "develop")
rsconnect::deployApp()
rsconnect::deployApp()
runApp()
devtools::install_github("EducationShinyAppTeam/boastUtils", ref = "develop")
runApp()
rsconnect::deployApp(appName = "Inference_Testing")
runApp()
devtools::install_github("EducationShinyAppTeam/boastUtils", ref = "develop")
rsconnect::deployApp(appName = "Inference_Testing")
runApp()
rsconnect::deployApp(appName = "Inference_Testing")
rsconnect::deployApp(appName = "Inference_for_means")
rsconnect::deployApp(appName = "Inference_for_Means")
as.data.frame(read.dcf("DESCRIPTION"))
as.data.frame(read.dcf("DESCRIPTION"))
as.data.frame(read.dcf("DESCRIPTION"))$Authors
as.data.frame(read.dcf("DESCRIPTION"))$Authors@R
as.data.frame(read.dcf("DESCRIPTION"))$Authors
as.data.frame(read.dcf("DESCRIPTION"))
person("Bob", "Carey")
person("Bob", "Carey", email = "rpc5102")
person("Bob", "Carey", email = "rpc5102@psu.edu")
a <- as.data.frame(read.dcf("DESCRIPTION"))$Authors
a
a <- as.data.frame(read.dcf("DESCRIPTION"))$Authors
a
a
a <- as.data.frame(read.dcf("DESCRIPTION"))$Authors
a <- quoted(as.data.frame(read.dcf("DESCRIPTION"))$Authors)
print(a)
print(a, quoted = TRUE)
noquote(a)
bibentry()
cite()
cite(a)
a <- quoted(as.data.frame(read.dcf("DESCRIPTION"))$Authors)
a <- as.data.frame(read.dcf("DESCRIPTION"))$Authors
a
noquote(a)
a <- as.data.frame(read.dcf("DESCRIPTION"))$Authors
a
noquote(a)
a <- as.data.frame(read.dcf("DESCRIPTION"))
a$Description
a <- as.data.frame(read.dcf("DESCRIPTION"))
a$Description
a <- as.data.frame(read.dcf("DESCRIPTION"))
a
a$Description
print(a)
print(a$Description)
a$License
META <- as.data.frame(read.dcf("DESCRIPTION"))
META$License
META$Chapter
